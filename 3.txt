package com.example.app1;

//import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
//import androidx.core.app.ActivityCompat;

import android.Manifest;
//import android.content.Intent;
import android.content.pm.PackageManager;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Build;
import android.os.Bundle;
//import android.os.Environment;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

//import android.os.Handler;

//import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
//import java.io.File;
import java.io.IOException;
//import java.io.ObjectOutputStream;
//import java.io.OutputStreamWriter;
//import java.io.PrintWriter;
//import java.net.MalformedURLException;
import java.net.Socket;
import java.io.ObjectInputStream;
import java.io.BufferedInputStream;
import java.io.DataOutputStream;
import java.io.FileInputStream;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;


public class MainActivity extends AppCompatActivity {

    Button btn_submit;
    ImageView img1;

    TextView text;
    String response;//서버 응답
    //Handler handler=new Handler();//토스트를 띄우기 위한 메인스레드 핸들러 객체 생성


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        //파일 생성-경로 확인하기 위한

        //파일 권한 묻기
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            if(checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED
                    || checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                if(shouldShowRequestPermissionRationale(Manifest.permission.WRITE_EXTERNAL_STORAGE)) {
                    Toast.makeText(this, "외부 저장소 사용을 위해 읽기/쓰기 필요", Toast.LENGTH_SHORT).show();
                }

                requestPermissions(new String[]
                        {Manifest.permission.WRITE_EXTERNAL_STORAGE,Manifest.permission.READ_EXTERNAL_STORAGE}, 2);
            }
        }


        btn_submit = findViewById(R.id.btn_submit);
        img1 = findViewById(R.id.img1);
        text = findViewById(R.id.text);

        btn_submit.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                text.setText("시작");
                String addr = "192.168.0.103";//서버 ip
                SocketThread thread = new SocketThread(addr);
                //thread.run();
                thread.start();
            }
        });

    }

    class SocketThread extends Thread {
        String host; //서버 IP
        String data; //전송 데이터
        //String filePath = "/storage/emulated/0/Pictures/toserver.jpg";
        //String filePath="/sdcard/TOServer/toserver.jpg";
        String filePath = "/sdcard/Pictures/toserver.jpg";
        Socket socket;
        DataOutputStream dos;
        FileInputStream fis;
        BufferedInputStream bis;
        ObjectInputStream instream;

        public SocketThread(String host) {
            this.host = host;
        }

        //@Override
        public void run() {
            try {

                int port = 8910;
                text.setText("포트번호부여");
                socket = new Socket(host, port);//소켓 열어주기
                text.setText("소켓 열기 성공");
                //소켓의 출력 스트림 참조
//                ObjectOutputStream outstream=new ObjectOutputStream(socket.getOutputStream());
//                outstream.writeObject(data);//출력 스트림에 데이터 넣기
//                outstream.flush();//출력

                //사진 전송
                text.setText("사진 전송 준비");
                /*
                File file = new File(filePath);
                text.setText("파일은 존재? " + file.isFile());
                fis = new FileInputStream(file);
                bis = new BufferedInputStream(fis);
                int len;
                int size = 10000;
                byte[] data = new byte[size];
                while ((len = bis.read(data)) != -1) {
                    dos.write(data, 0, len);
                    text.setText("byte " + data);
                }
                //서버에 전송
                dos.flush();
                */

                sendimg();
                //text.setText("사진 전송완료");

                /*
                //결과 받기
                String response=null;
                instream=new ObjectInputStream(socket.getInputStream());
                try{
                    String res=(String)instream.readObject();
                if(res!=null){ //응답 가져오기
                    response=res;
                }
                }catch(Exception e){}
                text.setText("결과: "+response);
                instream.close();
                */

                //소켓의 입력 스트림 참조조
                /*
                response=(String)instream.readObject();//응답 가져오기
                text.setText(response);
                */
                //토스트로 서버측 응답 결과 띄워줄 러너블 객체 생성하여 메인스레드 핸들러로 전달
                /*
                handler.post(new Runnable(){
                   @Override
                   public void run(){
                       Toast.makeText(MainActivity.this,"서버 응답: "+response, Toast.LENGTH_LONG).show();
                   }
                });
                 */

                socket.close();//소켓 해제
            } catch (IOException e) {
                text.setText("IOException1 오류");

            }
        }


        public void sendimg() {
            try {

                //<--자바에서 파이썬으로 사진 전송

                //사진 파일 byte로 변환
                //BufferedImage originalImage=ImageIO.read(new File("/sdcard/Pictures/toserver.jpg"));
                //ImageIO.write(originalImage,"jpg",byteArray);

                ByteArrayOutputStream byteArray=new ByteArrayOutputStream();


                //File f=new File("/sdcard/Pictures/toserver.jpg");
                //text.setText("파일은 존재? " + f.isFile());
                //Bitmap bitmap=BitmapFactory.decodeFile("/sdcard/Pictures/toserver.jpg");
                Bitmap bitmap=BitmapFactory.decodeFile(filePath);
                bitmap.compress(Bitmap.CompressFormat.JPEG,100,byteArray);

                //byteArray.flush();
                byte[] bytes=byteArray.toByteArray();
                text.setText(" "+bytes.toString());

                DataOutputStream dos=new DataOutputStream(socket.getOutputStream());
                DataInputStream dis=new DataInputStream(socket.getInputStream());

                dos.writeUTF(Integer.toString(bytes.length));
                dos.flush();

                dos.write(bytes);
                dos.flush();

                //--><-- 파이썬에서 결과받기
                bytes=new byte[20];
                dis.read(bytes,0,20);
                ByteBuffer b1=ByteBuffer.wrap(bytes);
                b1.order(ByteOrder.LITTLE_ENDIAN);
                int length=b1.getInt();
                bytes=new byte[length];
                dis.read(bytes,0,length);
                String msg=new String(bytes,"UTF-8");
                text.setText("서버에서 온 결과 "+msg);

                dos.close();
                dis.close();
                /*
                //데이터 전송용 스트림 생성
                dos = new DataOutputStream(socket.getOutputStream());
                text.setText("파일 송신 작업 시작");
                //파일 읽어서 서버에 전송
                File file = new File(filePath);
                fis = new FileInputStream(file);
                //bis = new BufferedInputStream(fis);
                text.setText("파일은 존재? " + file.isFile());

                text.setText("파일은 전송 중..");

                int len1;
                int size = 4096;
                byte[] data = new byte[size];

               // while ((len1 = bis.read(data)) != -1)
                while ((len1 = fis.read(data)) != -1){
                    dos.write(data, 0, len1);
                    text.setText("byte " + data);
                }
                dos.flush();//서버에 전송
                */
                /*
                //자바에서 자바로 사진 전송
                PrintWriter out=new PrintWriter(new BufferedWriter(new OutputStreamWriter(socket.getOutputStream(),"UTF-8")),true);
                text.setText("사진 전송 준비 완료1");
                File f=new File("/sdcard/Pictures/toserver.jpg");
                DataInputStream dis=new DataInputStream(new FileInputStream(f));
                text.setText("사진 전송 준비 완료2");
                DataOutputStream dos=new DataOutputStream(socket.getOutputStream());
                text.setText("사진 전송 준비 완료3");
                //추rk
                dos.write((byte)f.length());
                dos.flush();
                //
                byte[] buf=new byte[1024];
                long totalReadBytes=0;
                int readBytes;
                text.setText("사진 전송 준비 완료4");
                while((readBytes=dis.read(buf))>0){
                    dos.write(buf,0,readBytes);
                    totalReadBytes+=readBytes;
                }
                dos.close();
                */
            } catch (IOException e) {
            }

    /*
            finally {
                try {
                    fis.close();
                    dos.close();
                    //bis.close();
                } catch (IOException e) {
                    text.setText("IOException- close()오류");
                }
            }
            */

        }
    }
}

